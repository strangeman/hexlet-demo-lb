#---------------------------------------------------------------------
# Example configuration for a possible web application.  See the
# full configuration options online.
#
#   https://www.haproxy.org/download/1.8/doc/configuration.txt
#
#---------------------------------------------------------------------

#---------------------------------------------------------------------
# Global settings
#---------------------------------------------------------------------
global
    # to have these messages end up in /var/log/haproxy.log you will
    # need to:
    #
    # 1) configure syslog to accept network log events.  This is done
    #    by adding the '-r' option to the SYSLOGD_OPTIONS in
    #    /etc/sysconfig/syslog
    #
    # 2) configure local2 events to go to the /var/log/haproxy.log
    #   file. A line like the following can be added to
    #   /etc/sysconfig/syslog
    #
    #    local2.*                       /var/log/haproxy.log
    #
    log         127.0.0.1 local2

    chroot      /var/lib/haproxy
    pidfile     /var/run/haproxy.pid
    maxconn     4000
    user        haproxy
    group       haproxy
    daemon

    # turn on stats unix socket
    stats socket /var/lib/haproxy/stats

    # utilize system-wide crypto-policies
    ssl-default-bind-ciphers PROFILE=SYSTEM
    ssl-default-server-ciphers PROFILE=SYSTEM

#---------------------------------------------------------------------
# common defaults that all the 'listen' and 'backend' sections will
# use if not designated in their block
#---------------------------------------------------------------------
defaults
    mode    http
    option  httplog
    log     global
    timeout connect 5000ms
    timeout client 50000ms
    timeout server 50000ms

# enable metrics
listen stats
   bind *:8181
   stats enable
   stats uri /

#---------------------------------------------------------------------
# main frontend which proxys to the backends
#---------------------------------------------------------------------
frontend main
    bind *:80
 # Define hosts
    acl host_1 hdr(host) -i haproxy1.local
    acl host_2 hdr(host) -i haproxy2.local

    ## figure out which one to use
    use_backend service_1 if host_1
    use_backend service_2 if host_2

#---------------------------------------------------------------------
# round robin balancing between the various backends
#---------------------------------------------------------------------
backend service_1
    balance     roundrobin
    server  node1 192.168.56.21:5000 check
    server  node2 192.168.56.22:5000 check
    server  node3 192.168.56.23:5000 check

backend service_2
    balance     roundrobin
    server  node1 192.168.56.21:5001 check
    server  node2 192.168.56.22:5001 check
    server  node3 192.168.56.23:5001 check
